20180922
	《慕课网：django入门与实践》
	1.Django是Python下的重量级WEB架构；是一个开放源码的web应用架构，由Python写成。
	2.Django采用了MVC的软件设计模式；即模型 视图 控制器；称作MVT。 	
	3.谷歌浏览为打开开发者页面;	
	(1).打开浏览为后按F12；
	（2）.更多——更多工具——开发者工具；
	（3）.网页空白处右击点检查；
	（4）用Ctrlt+shift+i组合键；
	3-1 环境的搭建
	Django的安装 ：Windows下：
	（1）进入cmd命令行 pip install Django==2.1.1;
	（2）使用源码安装 git下载源码 进入源码所在根目录运行python setup.py install;
	使用命令python -m django --version查看是否安装成功；
20180923
	使用 djiango-admin
	创建项目：django-admin startproject myblog
	dir 显示目录
	cd myblog 进入myblog

	python manage.py runserver 启动服务器
	使用pycharm 打开myblog:看到目录：
	wagi.py:Python服务器网关接口；
	urls.py URL配置文件：Django项目中的所有地址（页面）都需要我们自己去配置；
	settings.py:
	创建应用：
	进入Myblog下的manage.py的同级目录：使用：python manage.py statrapp blog
	进入pycharm的blog应用下的settings.py下INSTALLED_APPS列表里添加元素blog
	配置url：
	（1）在应用blog的views.py进行编辑：from django.http import HttpResponse
	（2）在urls.py里编辑：
	import blog.views as bv
	urlpatterns = [
		path('admin/', admin.site.urls),
		path('index/', bv.index),
	 (1)python manage.py runserver 启动服务器
	 
20181023
	《python全栈开发-web框架篇》
day51
	DRP原则： Don't repeat yourself！
20181025
	1.创建项目：django-asmin startproject mysite
	dir 显示目录
	cd mysite 
	2.创建应用
	python manage.py startapp blog
	3.启动Django项目
	4.进入pycharm的blog应用下的urls.py 添加函数路径；
	在views下添加函数；
	进入pycharm的blog应用下的settings.py下INSTALLED_APPS列表里添加元素blog
运行
	1）pycharm主界面下方的Terminal界面：python manage.py runserver 8000;
	2) 直接点右上方的的运行按钮；
	3）使用cmd进入项目目录：python manage.py runserver 8000;
	cd\进入主目录；f:进入f
	正则表达式使用方法：path(r"cur_time",views.cur_time),
	在template创建cur_time.html,
	在views.py创建函数：
	def cur_time(request):
		return render(request,"cur_time.html")
20181027
	CommandError: You must set settings.ALLOWED_HOSTS if DEBUG is False.
	提示DEBUG为False时,必须设置settings.ALLOWED_HOSTS .

	ALLOWED_HOSTS = [
		'.example.com',  # Allow domain and subdomains
		'.example.com.',  # Also allow FQDN and subdomains
	]
	或者您需要设置所有的均可访问.那么可以这样设置.
	ALLOWED_HOSTS = ['*']
	任何用户均可以访问.
	然后再访问下.恢复正常.
总结步骤：
	1、创建一个Django项目：Django-admin startproject XXX

	2、创建一个App：Django-admin startapp XXX

	3、将App配置到Setting文件当中去

	4、打开app的文件下的model.py文件，编写model，这里主要是编写web所需要的数据表

	5、将数据导入到数据库当中去：python manage.py makemigrations XXX

	6、同步数据库：python manage.py migrate

	7、打开admin.py文件，注册数据库，这里是将model注册到后台当中，以便用后台来对数据进行增删改

	8、创建模板：在项目目录下创建templates文件夹，在文件夹下创建XXX.html模板文件

	9、配置Setting：
	10、设置views.py文件，导出数据库中的数据并在模板中使用这些数据

	11、绑定url：打开urls.py文件，一个view对应一个url，设置访问路径，哪个url访问哪个view

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	